package com.succez.custom.sms;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.7
 * 2015-07-21T09:49:56.821+08:00
 * Generated source version: 2.7.7
 * 
 */
@WebServiceClient(name = "SMSWebService", 
                  targetNamespace = "http://tempuri.org/") 
public class SMSWebService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "SMSWebService");
    public final static QName SMSWebServiceSoap = new QName("http://tempuri.org/", "SMSWebServiceSoap");
    static {
        URL url = null;
        try {
            url = new URL("http://172.0.101.101:8001/SMSWebservice.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SMSWebService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/djp/AppData/Local/Temp/tempdir3310907750301009167.tmp/SMSWebservice_1.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SMSWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SMSWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SMSWebService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    /**
     *
     * @return
     *     returns SMSWebServiceSoap
     */
    @WebEndpoint(name = "SMSWebServiceSoap")
    public SMSWebServiceSoap getSMSWebServiceSoap() {
        return super.getPort(SMSWebServiceSoap, SMSWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SMSWebServiceSoap
     */
    @WebEndpoint(name = "SMSWebServiceSoap")
    public SMSWebServiceSoap getSMSWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(SMSWebServiceSoap, SMSWebServiceSoap.class, features);
    }

}
